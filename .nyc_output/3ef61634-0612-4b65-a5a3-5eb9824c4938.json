{"/home/usuario/Ejercicios_PE/src/test-program.ts":{"path":"/home/usuario/Ejercicios_PE/src/test-program.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":5,"column":4},"end":{"line":5,"column":13}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":24}}},"fnMap":{"0":{"name":"prueba","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":15}},"loc":{"start":{"line":4,"column":18},"end":{"line":6,"column":1}},"line":4}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/Ejercicios_PE/src/test-program.ts","sources":["/home/usuario/Ejercicios_PE/src/test-program.ts"],"names":[],"mappings":";;;AAAA,SAAgB,MAAM;IAClB,OAAO,CAAC,CAAC;AACb,CAAC;AAFD,wBAEC","sourcesContent":["export function prueba(): number{\n    return 2;\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"303267170e26f4987c7902a60229e73e8dcdc362","contentHash":"7d1f63be0cb3c6dae13c60e218f8c4f7fa67f33aa98668613600a13412e32bb7"},"/home/usuario/Ejercicios_PE/src/pe-101-20-04.ts":{"path":"/home/usuario/Ejercicios_PE/src/pe-101-20-04.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":119}},"2":{"start":{"line":13,"column":8},"end":{"line":13,"column":29}},"3":{"start":{"line":21,"column":21},"end":{"line":21,"column":38}},"4":{"start":{"line":22,"column":8},"end":{"line":22,"column":30}},"5":{"start":{"line":23,"column":22},"end":{"line":23,"column":41}},"6":{"start":{"line":24,"column":8},"end":{"line":24,"column":34}},"7":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"8":{"start":{"line":33,"column":21},"end":{"line":33,"column":23}},"9":{"start":{"line":34,"column":8},"end":{"line":34,"column":70}},"10":{"start":{"line":34,"column":39},"end":{"line":34,"column":68}},"11":{"start":{"line":35,"column":8},"end":{"line":35,"column":22}},"12":{"start":{"line":42,"column":8},"end":{"line":42,"column":24}},"13":{"start":{"line":49,"column":8},"end":{"line":49,"column":28}},"14":{"start":{"line":52,"column":0},"end":{"line":52,"column":28}},"15":{"start":{"line":61,"column":26},"end":{"line":61,"column":40}},"16":{"start":{"line":68,"column":22},"end":{"line":68,"column":23}},"17":{"start":{"line":69,"column":8},"end":{"line":69,"column":49}},"18":{"start":{"line":69,"column":29},"end":{"line":69,"column":47}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":23}},"20":{"start":{"line":73,"column":0},"end":{"line":73,"column":36}},"21":{"start":{"line":82,"column":26},"end":{"line":82,"column":40}},"22":{"start":{"line":89,"column":22},"end":{"line":89,"column":23}},"23":{"start":{"line":90,"column":8},"end":{"line":90,"column":49}},"24":{"start":{"line":90,"column":29},"end":{"line":90,"column":47}},"25":{"start":{"line":91,"column":8},"end":{"line":91,"column":23}},"26":{"start":{"line":94,"column":0},"end":{"line":94,"column":36}},"27":{"start":{"line":103,"column":26},"end":{"line":103,"column":40}},"28":{"start":{"line":110,"column":22},"end":{"line":110,"column":23}},"29":{"start":{"line":111,"column":8},"end":{"line":111,"column":49}},"30":{"start":{"line":111,"column":29},"end":{"line":111,"column":47}},"31":{"start":{"line":112,"column":8},"end":{"line":112,"column":23}},"32":{"start":{"line":115,"column":0},"end":{"line":115,"column":38}},"33":{"start":{"line":124,"column":26},"end":{"line":124,"column":40}},"34":{"start":{"line":131,"column":22},"end":{"line":131,"column":53}},"35":{"start":{"line":132,"column":8},"end":{"line":132,"column":49}},"36":{"start":{"line":132,"column":29},"end":{"line":132,"column":47}},"37":{"start":{"line":133,"column":8},"end":{"line":133,"column":23}},"38":{"start":{"line":136,"column":0},"end":{"line":136,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":24},"end":{"line":14,"column":5}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":23},"end":{"line":26,"column":5}},"line":20},"2":{"name":"(anonymous_2)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":17},"end":{"line":36,"column":5}},"line":32},"3":{"name":"(anonymous_3)","decl":{"start":{"line":34,"column":28},"end":{"line":34,"column":29}},"loc":{"start":{"line":34,"column":39},"end":{"line":34,"column":68}},"line":34},"4":{"name":"(anonymous_4)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":16},"end":{"line":43,"column":5}},"line":41},"5":{"name":"(anonymous_5)","decl":{"start":{"line":48,"column":4},"end":{"line":48,"column":5}},"loc":{"start":{"line":48,"column":19},"end":{"line":50,"column":5}},"line":48},"6":{"name":"(anonymous_6)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":24},"end":{"line":61,"column":42}},"line":61},"7":{"name":"(anonymous_7)","decl":{"start":{"line":67,"column":4},"end":{"line":67,"column":5}},"loc":{"start":{"line":67,"column":14},"end":{"line":71,"column":5}},"line":67},"8":{"name":"(anonymous_8)","decl":{"start":{"line":69,"column":18},"end":{"line":69,"column":19}},"loc":{"start":{"line":69,"column":29},"end":{"line":69,"column":47}},"line":69},"9":{"name":"(anonymous_9)","decl":{"start":{"line":82,"column":4},"end":{"line":82,"column":5}},"loc":{"start":{"line":82,"column":24},"end":{"line":82,"column":42}},"line":82},"10":{"name":"(anonymous_10)","decl":{"start":{"line":88,"column":4},"end":{"line":88,"column":5}},"loc":{"start":{"line":88,"column":14},"end":{"line":92,"column":5}},"line":88},"11":{"name":"(anonymous_11)","decl":{"start":{"line":90,"column":18},"end":{"line":90,"column":19}},"loc":{"start":{"line":90,"column":29},"end":{"line":90,"column":47}},"line":90},"12":{"name":"(anonymous_12)","decl":{"start":{"line":103,"column":4},"end":{"line":103,"column":5}},"loc":{"start":{"line":103,"column":24},"end":{"line":103,"column":42}},"line":103},"13":{"name":"(anonymous_13)","decl":{"start":{"line":109,"column":4},"end":{"line":109,"column":5}},"loc":{"start":{"line":109,"column":14},"end":{"line":113,"column":5}},"line":109},"14":{"name":"(anonymous_14)","decl":{"start":{"line":111,"column":18},"end":{"line":111,"column":19}},"loc":{"start":{"line":111,"column":29},"end":{"line":111,"column":47}},"line":111},"15":{"name":"(anonymous_15)","decl":{"start":{"line":124,"column":4},"end":{"line":124,"column":5}},"loc":{"start":{"line":124,"column":24},"end":{"line":124,"column":42}},"line":124},"16":{"name":"(anonymous_16)","decl":{"start":{"line":130,"column":4},"end":{"line":130,"column":5}},"loc":{"start":{"line":130,"column":14},"end":{"line":134,"column":5}},"line":130},"17":{"name":"(anonymous_17)","decl":{"start":{"line":132,"column":18},"end":{"line":132,"column":19}},"loc":{"start":{"line":132,"column":29},"end":{"line":132,"column":47}},"line":132}},"branchMap":{},"s":{"0":1,"1":1,"2":4,"3":4,"4":4,"5":4,"6":4,"7":4,"8":4,"9":4,"10":11,"11":4,"12":4,"13":4,"14":1,"15":1,"16":1,"17":1,"18":3,"19":1,"20":1,"21":1,"22":1,"23":1,"24":3,"25":1,"26":1,"27":1,"28":1,"29":1,"30":3,"31":1,"32":1,"33":1,"34":1,"35":1,"36":2,"37":1,"38":1},"f":{"0":4,"1":4,"2":4,"3":11,"4":4,"5":4,"6":1,"7":1,"8":3,"9":1,"10":1,"11":3,"12":1,"13":1,"14":3,"15":1,"16":1,"17":2},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/Ejercicios_PE/src/pe-101-20-04.ts","sources":["/home/usuario/Ejercicios_PE/src/pe-101-20-04.ts"],"names":[],"mappings":";;;AAAA;;GAEG;AACH,MAAsB,QAAQ;IAC1B;;;OAGG;IACH,YAAsB,MAAgB;QAAhB,WAAM,GAAN,MAAM,CAAU;IAAE,CAAC;IAEzC;;;;OAIG;IACI,SAAS,CAAC,OAA4B;QACzC,IAAI,MAAM,GAAY,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACxC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA;QACrB,IAAI,OAAO,GAAU,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACzC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC1B,OAAO,OAAO,CAAC;IACnB,CAAC;IAED;;;;OAIG;IACO,GAAG,CAAC,OAA4B;QACtC,IAAI,MAAM,GAAa,EAAE,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC9D,OAAO,MAAM,CAAC;IAClB,CAAC;IAQD;;;OAGG;IACO,QAAQ,CAAC,CAAW;QAC1B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IACpB,CAAC;IAED;;;OAGG;IACQ,WAAW,CAAC,CAAS;QAC5B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC;CACJ;AApDD,4BAoDC;AAED;;GAEG;AACH,MAAa,YAAa,SAAQ,QAAQ;IACtC;;;OAGG;IACH,YAAY,MAAgB,IAAE,KAAK,CAAC,MAAM,CAAC,CAAA,CAAA,CAAC;IAE5C;;;;OAIG;IACO,MAAM,CAAC,CAAW;QACxB,IAAI,OAAO,GAAW,CAAC,CAAC;QACxB,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,IAAI,OAAO,CAAC,CAAA;QACxC,OAAO,OAAO,CAAC;IACnB,CAAC;CACJ;AAjBD,oCAiBC;AAED;;GAEG;AACH,MAAa,YAAa,SAAQ,QAAQ;IACtC;;;OAGG;IACH,YAAY,MAAgB,IAAE,KAAK,CAAC,MAAM,CAAC,CAAA,CAAA,CAAC;IAE5C;;;;OAIG;IACO,MAAM,CAAC,CAAW;QACxB,IAAI,OAAO,GAAW,CAAC,CAAC;QACxB,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,IAAI,OAAO,CAAC,CAAA;QACxC,OAAO,OAAO,CAAC;IACnB,CAAC;CACJ;AAjBD,oCAiBC;AAED;;GAEG;AACH,MAAa,aAAc,SAAQ,QAAQ;IACvC;;;OAGG;IACH,YAAY,MAAgB,IAAE,KAAK,CAAC,MAAM,CAAC,CAAA,CAAA,CAAC;IAE5C;;;;OAIG;IACO,MAAM,CAAC,CAAW;QACxB,IAAI,OAAO,GAAW,CAAC,CAAC;QACxB,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,IAAI,OAAO,CAAC,CAAA;QACxC,OAAO,OAAO,CAAC;IACnB,CAAC;CACJ;AAjBD,sCAiBC;AAED;;GAEG;AACH,MAAa,YAAa,SAAQ,QAAQ;IACtC;;;OAGG;IACH,YAAY,MAAgB,IAAE,KAAK,CAAC,MAAM,CAAC,CAAA,CAAA,CAAC;IAE5C;;;;OAIG;IACO,MAAM,CAAC,CAAW;QACxB,IAAI,OAAO,GAAW,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACpD,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,IAAI,OAAO,CAAC,CAAA;QACxC,OAAO,OAAO,CAAC;IACnB,CAAC;CACJ;AAjBD,oCAiBC","sourcesContent":["/**\n * @class Clase abstracta\n */\nexport abstract class TMethods{\n    /**\n     * Constructor de la clase abstracta\n     * @param vector Array de numeros\n     */\n    constructor(protected vector: number[]){}\n\n    /**\n     * Algoritmo que realiza la operación map y reduce sobre el vector que almacena la clase\n     * @param funcion Función que realizará la función map\n     * @returns resultado del reduce\n     */\n    public algorithm(funcion: (x: number)=>number): number{\n        let mapped:number[] = this.map(funcion);\n        this.afterMap(mapped)\n        let reduced:number = this.reduce(mapped);\n        this.afterReduce(reduced);\n        return reduced;\n    }\n\n    /**\n     * Método que aplica una operación a cada uno de los elementos del array\n     * @param funcion Operación que realiza\n     * @returns Vector con el resultado\n     */\n    protected map(funcion: (x: number)=>number):number[]{\n        let result: number[] = [];\n        this.vector.forEach(element => result.push(funcion(element)));\n        return result;\n    }\n\n    /**\n     * Método abstracto que reduce los valores de un vector a un único valor\n     * @param vector Vector que se reduce\n     */\n    protected abstract reduce(vector: number[]):number;\n\n    /**\n     * Método Hook para actualizar el array\n     * @param v Array actualizado\n     */\n    protected afterMap(v: number[]){\n        this.vector = v;\n    }\n\n    /**\n     * Método Hook para añadir el resultado de reduce\n     * @param n Valor a añadir\n     */\n     protected afterReduce(n: number){\n        this.vector.push(n);\n    }\n}\n\n/**\n * @description Al reducir suma los elementos\n */\nexport class AddMapReduce extends TMethods{\n    /**\n     * Constructor de la clase AddMapReduce\n     * @param vector Vector que se desea almacenar\n     */\n    constructor(vector: number[]){super(vector)}\n\n    /**\n     * Reduce el vector a la suma de sus elementos\n     * @param v Vector a reducir\n     * @returns Resultado de la suma\n     */\n    protected reduce(v: number[]): number {\n        let reduced: number = 0;\n        v.forEach(element => reduced += element)\n        return reduced;\n    }\n}\n\n/**\n * @description Al reducir resta los elementos\n */\nexport class SubMapReduce extends TMethods{\n    /**\n     * Constructor de la clase SubMapReduce\n     * @param vector Vector que se desea almacenar\n     */\n    constructor(vector: number[]){super(vector)}\n\n    /**\n     * Reduce el vector a la resta de sus elementos\n     * @param v Vector a reducir\n     * @returns Resultado de la resta\n     */\n    protected reduce(v: number[]): number {\n        let reduced: number = 0;\n        v.forEach(element => reduced -= element)\n        return reduced;\n    }\n}\n\n/**\n * @description Al reducir multiplica los elementos\n */\nexport class ProdMapReduce extends TMethods{\n    /**\n     * Constructor de la clase ProdMapReduce\n     * @param vector Vector que se desea almacenar\n     */\n    constructor(vector: number[]){super(vector)}\n\n    /**\n     * Reduce el vector a la multiplicación de sus elementos\n     * @param v Vector a reducir\n     * @returns Resultado de la multiplicación\n     */\n    protected reduce(v: number[]): number {\n        let reduced: number = 1;\n        v.forEach(element => reduced *= element)\n        return reduced;\n    }\n}\n\n/**\n * @description Al divide suma los elementos\n */\nexport class DivMapReduce extends TMethods{\n    /**\n     * Constructor de la clase DivMapReduce\n     * @param vector Vector que se desea almacenar\n     */\n    constructor(vector: number[]){super(vector)}\n\n    /**\n     * Reduce el vector a la división de sus elementos\n     * @param v Vector a reducir\n     * @returns Resultado de la división\n     */\n    protected reduce(v: number[]): number {\n        let reduced: number = this.vector[0]*this.vector[0];\n        v.forEach(element => reduced /= element)\n        return reduced;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bcbd66575bfbf79b01e4ee2b891822fbc9e4f3f9","contentHash":"e8cdb52a3b5d571f194d581f83e8e48d1afb36c9a2e93f1e12d1486baa0ea2d1"}}